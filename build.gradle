buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1"
        classpath "gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.4"
    }
}

group 'uk.co.ramp.covid.simulation'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: "org.sonarqube"
apply plugin: 'jacoco'
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'eclipse'
apply plugin: 'idea'

ext {

    ext.getGitHash = { ->

        def stdout = new ByteArrayOutputStream()
        exec {
            // get git commit hash with -dirty appended for uncommitted changes
            // (see https://stackoverflow.com/questions/21017300/git-command-to-get-head-sha1-with-dirty-suffix-if-workspace-is-not-clean)
            commandLine 'git', 'describe', '--match=NeVeRmAtCh', '--always', '--abbrev=40', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

}

buildConfig {
    buildConfigField "String", "GitHash", "${getGitHash()}"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile).all {
    options.compilerArgs.add("-Xlint:all")
    options.compilerArgs.add("-Xlint:-serial")
    options.compilerArgs.add("-Werror")
}

run {
    enableAssertions = true
}

application {
    mainClassName = "uk.co.ramp.covid.simulation.RunModel"
}


jacoco{
    version = '0.8.5'
}

version = '1.0.0-SNAPSHOT'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    implementation 'org.apache.commons:commons-math3:3.6.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.2'
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.8'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'



    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}


sonarqube {
    properties {
        property "sonar.host.url", "http://10.0.1.11:9000"
    }
}

